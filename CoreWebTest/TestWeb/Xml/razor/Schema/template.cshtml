@inherits YJC.Toolkit.Razor.ToolkitTemplatePage<TModel>
@using System.Data;
@using System.Collections.Generic;
@using YJC.Toolkit.MetaData;
@using YJC.Toolkit.Data;
@using YJC.Toolkit.Razor;
@using YJC.Toolkit.Sys;
@using YJC.Toolkit.Web;
@using global::Toolkit.SchemaSuite;
@{
    SchemaTable table = Model.MetaData;
    PageData pageData = Model.PageData;

    IEnumerable<IFieldInfoEx> normalFields = table.Fields;
    var groupFields = FormatFields(normalFields, pageData.Groups);
}
@section DefaultHeader {
    <h5 class="text-orange">@table.TableName</h5>
}
@section DefaultButtons
{
    <div class="text-center clearfix">
        @*@Raw(BootcssCommonUtil.Button(pageData.SaveButtonCaption, "btn-submit auto-disabled", BootcssButton.Info, false))*@
        @Raw(BootcssCommonUtil.Button("获取Json", "btn-json", BootcssButton.Info, false, new HtmlAttribute("id", "hello")))
    </div>
}
@functions
{
    IEnumerable<IGrouping<SectionGroup, IFieldInfoEx>> FormatFields(IEnumerable<IFieldInfoEx> fields, List<SectionGroup> groups)
    {

        if (groups == null || groups.Count == 0)
        {
            return null;
        }
        var result = from grp in groups
                     from field in fields
                     let order = ((SchemaField)field).Order
                     where order > grp.Order && order <= grp.EndOrder
                     group field by grp;
        return result;
    }
}
<!DOCTYPE html>
<html>
<head>
    <title>@table.TableName</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" />
    <link rel="stylesheet" type="text/css" href="@("toolkitjs/v5/bootstrap/css/bootstrap.min.css".AppVirutalPath())" />
    <link rel="stylesheet" type="text/css" href="@("toolkitjs/v5/bootstrap/css/bootstrap-theme.min.css".AppVirutalPath())" />
    <link rel="stylesheet" type="text/css" href="@("toolkitjs/v5/bootstrap/css/font-awesome.min.css".AppVirutalPath())" />
    <link rel="stylesheet" type="text/css" href="@("toolkitcss/v5/commonM/style.css?v=2".AppVirutalPath())" />
</head>
<body class="tk-dataPage" data-webpath="@HtmlCommonUtil.AppVirtualPath">
    <div class="container">
        @RenderSectionOrDefault("Header", "DefaultHeader")
        <form action="." method="POST" id="PostForm" class="tk-dataform clearfix mb15" role="form" data-check="true">
            <div id="@table.TableName" class="tk-datatable table-row bg-white-panel column3">
                <div class="p10 pull-left w100p">
                    @foreach (var group in groupFields)
                    {
                        string collapse = group.Key.IsCollaspe ? string.Empty : "in";
                        string rotate = group.Key.IsCollaspe ? "rotate-180" : string.Empty;
                        <div class="panel panel-default">
                            <div class="panel-heading panel-collapse-trigger" role="tab" id="headingTwo">
                                <h4 class="panel-title">@group.Key.Caption</h4>
                                <i class="trigger-icon fa icon-chevron-down @rotate"></i>
                            </div>
                            <div class="panel-collapse collapse @collapse">
                                <div class="panel-body">
                                    @foreach (IFieldInfoEx field in group)
                                    {
                                        SchemaField fieldEx = field.Convert<SchemaField>();
                                        <div class="@HtmlCommonUtil.MergeClass("tk-column form-group", field.LayoutClass())">
                                            @if (fieldEx.ControlType == ControlType.CheckBox)
                                            {
                                                <dl class="nocaption">
                                                    <dd>
                                                        <span class="tk-control">
                                                            <div class="checkbox">
                                                                <input type="checkbox" v-model="@Raw(field.FieldName)" />
                                                                <label class="checkbox-label">@field.DisplayName</label>
                                                            </div>
                                                        </span>
                                                    </dd>
                                                </dl>
                                            }
                                            else
                                            {
                                                <dl>
                                                    <dt>@field.DisplayName</dt>
                                                    <dd>
                                                        <span class="tk-control">
                                                            @if (fieldEx.ControlType == ControlType.Date)
                                                            {
                                                                <div class="input-group date" data-control="Date" data-date-format="yyyy-mm-dd" data-date>
                                                                    <input type="text" size="10" readonly placeholder="@field.DisplayName" class="form-control" data-title="@field.DisplayName" v-model1="@Raw(field.FieldName).@Raw("年")">
                                                                    <span class="input-group-addon"><i class="glyphicon glyphicon-remove"></i></span>
                                                                    <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <input type="text" class="form-control" placeholder="@field.DisplayName" v-model="@Raw(field.FieldName)" />
                                                            }
                                                        </span>
                                                    </dd>
                                                </dl>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </form>
        @RenderSectionOrDefault("ModuleButtons", "DefaultButtons")
    </div>
    <script type="text/javascript" src="@("toolkitjs/v5/lib/jquery-1.11.1.min.js".AppVirutalPath())"></script>
    <script type="text/javascript" src="@("toolkitjs/v5/bootstrap/js/bootstrap.min.js".AppVirutalPath())"></script>
    <script type="text/javascript" src="@("toolkitjs/v5/toolkit/toolkit.js".AppVirutalPath())"></script>
    <script type="text/javascript" src="@("toolkitjs/v5/toolkit/coreT/toolkit.page.js".AppVirutalPath())"></script>
    <script type="text/javascript" src="@("toolkitjs/v5/toolkit/coreT/toolkit.data.js?v=5".AppVirutalPath())"></script>
    <script type="text/javascript" src="@("toolkitjs/v5/toolkit/coreT/toolkit.ui.js?v=3".AppVirutalPath())"></script>
    <script type="text/javascript" src="@("toolkitjs/v5/toolkit/coreT/toolkit.edit.js".AppVirutalPath())"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#hello").click(loadJson);
        });
        function loadJson() {
            var url = "/c/xml/C/RazorTest/TestSchemaSource";
            $.ajax({
                type: 'get',
                dataType: 'text',
                url: url,
                success: function (req) {
                    alert(req);
                },
                error: function () {
                    Toolkit.page.showError('数据提交失败！请稍候重试。');
                }
            });
        }
    </script>
</body>
</html>