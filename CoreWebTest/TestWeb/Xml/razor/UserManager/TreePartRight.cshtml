@inherits YJC.Toolkit.Razor.ToolkitTemplatePage<TModel>
@using YJC.Toolkit.Sys;
@using YJC.Toolkit.Data;
@using YJC.Toolkit.Web;
@using System.Linq;
@using System.Collections.Generic;
@using System.Data;
@using System.Text;
@functions {
    List<DataRow> GetSubRows(DataTable table, string field, int value, string orderField)
    {
        var result = from row in table.AsEnumerable()
                     where row.Field<int>(field) == value
                     orderby row.Field<string>(orderField)
                     select row;
        return result.ToList();
    }

    List<DataRow> GetSubRows2(DataTable table, string field, int value, string orderField)
    {
        var result = from row in table.AsEnumerable()
                     where row.Field<int>(field) == value
                     orderby row.Field<int?>(orderField)
                     select row;
        return result.ToList();
    }

    string BuildTree(StringBuilder builder, IEnumerable<DataRow> rows, DataTable funcTable,
        HashSet<int> partSet, DataTable subFuncTable, HashSet<int> subPartSet)
    {
        //StringBuilder builder = new StringBuilder();
        foreach (DataRow row in rows)
        {
            int id = row["Id"].Value<int>();
            List<DataRow> subRows = GetSubRows(funcTable, "ParentId", id, "TreeLayer");
            List<DataRow> subFuncRows = GetSubRows2(subFuncTable, "FnId", id, "OperOrder");
            string nodeClass = (subRows.Count > 0 || subFuncRows.Count > 0) ? "node " : string.Empty;

            builder.AppendFormat("<li class=\"{2}function\" data-mode=\"checkbox\" data-checked=\"{1}\" data-name=\"{0}\">\n",
                id, partSet.Contains(id).ToString().ToLower(), nodeClass);
            builder.AppendFormat("<span class=\"leaf\"><span class=\"mif-tag fg-blue mr5\" style=\"margin-bottom: 3px;\"></span>{0}</span>\n", row.GetString("Name"));
            if (subRows.Count > 0)
            {
                builder.AppendLine("<span class=\"node-toggle\"></span><ul>");
                BuildTree(builder, subRows, funcTable, partSet, subFuncTable, subPartSet);
                builder.AppendLine("</ul>");
            }
            else
            {
                if (subFuncRows.Count > 0)
                {
                    builder.AppendLine("<span class=\"node-toggle\"></span><ul>");
                    foreach (DataRow subfuncRow in subFuncRows)
                    {
                        int subId = subfuncRow["Id"].Value<int>();
                        builder.AppendFormat("<li class=\"subFunc\" data-mode=\"checkbox\" data-checked=\"{1}\" data-name=\"{0}\">\n",
                            subId, subPartSet.Contains(subId).ToString().ToLower());
                        builder.AppendFormat("<span class=\"leaf\"><span class=\"mif-list fg-lime mr5\" style=\"margin-bottom: 3px;\"></span>{0}</span>\n",
                            subfuncRow.GetString("Name"));
                        builder.Append("</li>\n");
                    }
                    builder.AppendLine("</ul>");
                }
            }
            builder.Append("</li>\n");
        }

        return builder.ToString();
    }
}
@{
    DataSet dataSet = (DataSet)Model;
    DataTable partTable = dataSet.Tables["PartFunc"];
    HashSet<int> partSet = new HashSet<int>();
    if (partTable != null)
    {
        foreach (DataRow row in partTable.Rows)
        {
            partSet.Add(row["FuncId"].Value<int>());
        }
    }
    DataTable subPartTable = dataSet.Tables["PartSubFunc"];
    HashSet<int> subPartSet = new HashSet<int>();
    if (subPartTable != null)
    {
        foreach (DataRow row in subPartTable.Rows)
        {
            subPartSet.Add(row["SubFuncId"].Value<int>());
        }
    }
    StringBuilder builder = new StringBuilder();
    DataTable funcTable = dataSet.Tables["Function"];
    DataTable subFuncTable = dataSet.Tables["SubFunc"];
    IEnumerable<DataRow> rootRows;
    if (funcTable == null)
    {
        rootRows = null;
    }
    else
    {
        rootRows = from item in funcTable.AsEnumerable()
                   where item.Field<int>("ParentId") == -1
                   orderby item.Field<string>("TreeLayer")
                   select item;
    }
}
<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" />
    <link rel="stylesheet" type="text/css" href="@("toolkitjs/v5/metro-ui/css/metro.min.css".AppVirutalPath())" />
    <link rel="stylesheet" type="text/css" href="@("toolkitjs/v5/metro-ui/css/metro-icons.min.css".AppVirutalPath())" />
    <link rel="stylesheet" type="text/css" href="@("toolkitcss/v5/commonM/style.css".AppVirutalPath())" />
</head>
<body data-webpath="@HtmlCommonUtil.AppVirtualPath">
    @if (rootRows != null)
    {
        <div class="treeview" data-role="treeview">
            <ul style="height:340px; overflow-y:scroll">
                @Raw(BuildTree(builder, rootRows, funcTable, partSet, subFuncTable, subPartSet))
            </ul>
        </div>
    }
    <div class="tc pt15 mb5">
        <input type="hidden" id="PartId" value="@dataSet.GetFieldValue("QueryString", "Id")" />
        @if (rootRows != null)
        {
            <button class="button primary btn-save mr10">保存</button>
        }
        <button class="button" data-dialog-action="close">关闭</button>
    </div>
    <script type="text/javascript" src="@("toolkitjs/v5/lib/jquery-1.11.1.min.js".AppVirutalPath())"></script>
    <script type="text/javascript" src="@("toolkitjs/v5/metro-ui/js/metro.min.js".AppVirutalPath())"></script>
    <script type="text/javascript" src="@("toolkitjs/v5/toolkit/toolkit.js".AppVirutalPath())"></script>
    <script type="text/javascript" src="@("toolkitjs/v5/toolkit/coreT/toolkit.page.js".AppVirutalPath())"></script>
    <script type="text/javascript" src="@("toolkitjs/v5/toolkit/coreT/toolkit.data.js?v=5".AppVirutalPath())"></script>
    <script type="text/javascript" src="@("toolkitjs/v5/toolkit/coreT/toolkit.ui.js?v=1".AppVirutalPath())"></script>
    <script type="text/javascript" src="@("userjs/UserManager/partright.js".AppVirutalPath())"></script>
</body>
</html>