@inherits YJC.Toolkit.Razor.ToolkitTemplatePage<TModel>
@using System.Data;
@using System.Collections.Generic;
@using Microsoft.AspNetCore.Html;
@using YJC.Toolkit.Data;
@using YJC.Toolkit.MetaData;
@using YJC.Toolkit.Razor;
@using YJC.Toolkit.Sys;
@using YJC.Toolkit.Web;
@{
    INormalMetaData metaData = ViewBag.MetaData;
    IEnumerable<INormalTableData> tables = metaData.TableDatas;
    PageInfo page = Model.Info;
    string key = string.Empty;
    string style = OperatorUtil.GetStyle(page.Style);
    if (style == "update")
    {
        key = "?" + OperatorUtil.AppendKey(metaData);
    }
    List<List<Tk5FieldInfoEx>> showFields = OperatorUtil.Arrange(table);
    int colBase = 24 / table.ColumnCount;
}
<template>
    <div class="app-container mq-edit-page">
        <!-- 内容区域 -->
        <div class="section-content">

            <el-form ref="editForm"
                     :model="data"
                     :rules="rules"
                     label-width="100px"
                     data-url="/c/xml/@(style)/@(page.Source)@key"
                     data-table-name="@table.TableName">
                @foreach (var line in showFields)
                {
                    <el-row class="row-wrapper">
                        @foreach (var field in line)
                        {
                            string nickName = field.NickName;
                            int span = field.Layout.Layout == FieldLayout.PerLine ? 24 : field.Layout.UnitNum * colBase;
                            if (span > 24)
                            {
                                span = 24;
                            }
                            <el-col :span="@span" class="col-wrapper">
                                <el-form-item label="@Raw(field.DisplayName)" prop="@nickName" :error="errors.@nickName">
                                    <el-input v-model="data.@nickName" />
                                </el-form-item>
                            </el-col>
                        }
                    </el-row>
                }
            </el-form>
        </div>

        <!-- 按钮区域 -->
        <div class="section-button">
            <el-button type="primary" @@click="handleSubmitForm('editForm')">确定</el-button>
            <el-button v-if="settings.resetButtonVisible" icon="el-icon-delete" @@click="handleReset('editForm')">重置</el-button>
            <el-button v-if="settings.backButtonVisible" @@click="handleBack">{{ settings.backButtonCaption }}</el-button>
        </div>
    </div>
</template>

<script src="./edit-js.js"></script>
<style scoped lang="scss" src="./edit-css.scss"></style>