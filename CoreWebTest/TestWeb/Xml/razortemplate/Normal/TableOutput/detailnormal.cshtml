@inherits YJC.Toolkit.Razor.MultiEditTemplatePage<TModel>
@using System.Data;
@using System.Linq;
@using System.Text;
@using System.Collections.Generic;
@using Microsoft.AspNetCore.Html;
@using YJC.Toolkit.MetaData;
@using YJC.Toolkit.Data;
@using YJC.Toolkit.Razor;
@using YJC.Toolkit.Sys;
@using YJC.Toolkit.Web;
@{
    IEditModel model = (IEditModel)Model;
    NormalMultiDetailData pageData = ViewBag.PageData;
    INormalTableData tableData = ViewBag.MetaData;
    IFieldValueProvider provider = model.CreateMainObjectProvider(tableData);
    bool ignoreEmptyField = pageData.IgnoreEmptyField;
    bool showHint = pageData.AppendHint;

    var groupFields = FormatFields(tableData.DataList, pageData[tableData.TableName]?.ControlGroupList);
}
@functions
{
    IEnumerable<IGrouping<GroupSection, Tk5FieldInfoEx>> FormatFields(IEnumerable<Tk5FieldInfoEx> fields, List<GroupSection> groups)
    {

        if (groups == null || groups.Count == 0)
        {
            return null;
        }
        var result = from grp in groups
                     from field in fields
                     let order = field.InternalControl?.Order
                     where order != null && order >= grp.Order && order < grp.EndOrder
                     group field by grp;
        return result;
    }
}
<div class="panel panel-info tk-datatable" id="@tableData.TableName">
    <div class="panel-heading">
        <h3 class="panel-title">@tableData.TableDesc</h3>
    </div>
    <div class="@HtmlCommonUtil.MergeClass(" panel-body table-row", "column" + tableData.ColumnCount.ToString())">
        <div class="p10">
            @if (groupFields == null)
            {
                @foreach (Tk5FieldInfoEx field in tableData.DataList)
                {
                    HtmlString fieldString = RenderFieldItem(provider, tableData.TableName, field);
                    string value = provider[field.NickName].ToString();
                    if (fieldString != null)
                    {
                        @Raw(fieldString.Value)
                    }
                    else
                    {
                        @if (ignoreEmptyField && string.IsNullOrEmpty(value))
                        {
                            continue;
                        }
                        <div class="@HtmlCommonUtil.MergeClass(" tk-column", field.LayoutClass(), "pt10")">
                            <dl>
                                <dt>@field.DisplayName</dt>
                                <dd>
                                    <span class="tk-control">
                                        @Raw(field.Detail(provider, showHint, false))
                                    </span>
                                </dd>
                            </dl>
                        </div>
                    }
                }
            }
            else
            {
                @foreach (var group in groupFields)
                {
                    string collapse = group.Key.IsCollaspe ? string.Empty : "in";
                    string rotate = group.Key.IsCollaspe ? "rotate-180" : string.Empty;
                    <div class="panel panel-default">
                        <div class="panel-heading panel-collapse-trigger" role="tab" id="headingTwo">
                            <h4 class="panel-title">@group.Key.Caption</h4>
                            <i class="trigger-icon fa icon-chevron-down @rotate"></i>
                        </div>
                        <div class="panel-collapse collapse @collapse">
                            <div class="panel-body">
                                @foreach (Tk5FieldInfoEx field in group)
                                {
                                    HtmlString fieldString = RenderFieldItem(provider, tableData.TableName, field);
                                    string value = provider[field.NickName].ToString();
                                    if (fieldString != null)
                                    {
                                        @Raw(fieldString.Value)
                                    }
                                    else
                                    {
                                        <div class="@HtmlCommonUtil.MergeClass(" tk-column", field.LayoutClass(), "pt10")">
                                            <dl>
                                                <dt>@field.DisplayName</dt>
                                                <dd>
                                                    <span class="tk-control">
                                                        @Raw(field.Detail(provider, showHint, false))
                                                    </span>
                                                </dd>
                                            </dl>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>