@inherits YJC.Toolkit.Razor.MultiEditTemplatePage<TModel>
@using System.Data;
@using System.Linq;
@using System.Text;
@using System.Collections.Generic;
@using Microsoft.AspNetCore.Html;
@using YJC.Toolkit.MetaData;
@using YJC.Toolkit.Data;
@using YJC.Toolkit.Razor;
@using YJC.Toolkit.Sys;
@using YJC.Toolkit.Web;
@{
    IMultiEditModel model = (IMultiEditModel)Model;
    NormalMultiEditData pageData = ViewBag.PageData;
    INormalTableData tableData = ViewBag.MetaData;
    (int ColumnCount, bool IsFix, RazorOutputData OtherNewButton) customData = ViewBag.CustomData;

    bool showCaption = pageData.ShowCaption;
    string dataClass = showCaption ? string.Empty : "class=\"nocaption\"";
}
@section ListFoot
{
    <div class="panel-footer">
        <div class="pull-right ui-newrow">
            <input type="number" class="w40 form-control input-sm di" style="display: inline; height: 23px; padding: 0 3px; width: 50px" value="1" />
            <button class="btn btn-info btn-xs ml5 ui-btn-new" title="新建数据行">新建</button>
            @if (customData.OtherNewButton != null)
            {
                var result = customData.OtherNewButton.Execute(this, model);
                @Raw(result.Value)
            }
        </div>
        <div class="btn-group">
            <button type="button" class="btn btn-info btn-xs ui-btn-checkall">全选</button>
            <button type="button" class="btn btn-info btn-xs ui-btn-checkreverse">反选</button>
            <button type="button" class="btn btn-info btn-xs ui-btn-checknone">全不选</button>
            <button type="button" class="btn btn-info btn-xs ui-btn-delrow">删除</button>
            <button type="button" class="btn btn-info btn-xs ui-btn-delall">全删</button>
        </div>
    </div>
}
@functions
{
    string GetJsHandler(string tableName)
    {
        SingleTableEditData editData = GetTableData(tableName);
        if (editData == null)
            return string.Empty;
        if (string.IsNullOrEmpty(editData.OnRowAdded) && string.IsNullOrEmpty(editData.OnRowDeleted))
            return string.Empty;
        StringBuilder builder = new StringBuilder();
        if (!string.IsNullOrEmpty(editData.OnRowAdded))
            builder.AppendFormat(" data-rowadded=\"{0}\"", editData.OnRowAdded);
        if (!string.IsNullOrEmpty(editData.OnRowDeleted))
            builder.AppendFormat(" data-rowdeleted=\"{0}\"", editData.OnRowDeleted);

        return builder.ToString();
    }

    HtmlString ShowListFoot((int ColumnCount, bool IsFix, RazorOutputData OtherNewButton) tableData)
    {
        if (tableData.IsFix)
            return HtmlString.Empty;
        else
            return RenderSection("ListFoot");
    }

    IEnumerable<IGrouping<GroupSection, Tk5FieldInfoEx>> FormatFields(IEnumerable<Tk5FieldInfoEx> fields, List<GroupSection> groups)
    {

        if (groups == null || groups.Count == 0)
        {
            return null;
        }
        var result = from grp in groups
                     from field in fields
                     let order = field.InternalControl?.Order
                     where order != null && order >= grp.Order && order < grp.EndOrder
                     group field by grp;
        return result;
    }
}

<div class="panel panel-info tk-datatable" id="@tableData.TableName" @GetJsHandler(tableData.TableName)>
    <div class="panel-heading">
        <h3 class="panel-title">@tableData.TableDesc</h3>
    </div>
    @{
        IEnumerable<Tk5FieldInfoEx> hiddenFields = tableData.HiddenList;
        IEnumerable<Tk5FieldInfoEx> normalFields = tableData.DataList;
        var groupFields = FormatFields(normalFields, pageData[tableData.TableName]?.ControlGroupList);
    }
    <div class="panel-body">
        <table class="list-table table">
            <colgroup>
                @if (!customData.IsFix)
                {
                    <col width="30" class="checkcol" />
                    <col width="30" class="rowindex" />
                }
                <col class="subforms" />
            </colgroup>
            <thead>
                <tr>
                    @if (!customData.IsFix)
                    {
                        <th class="text-center text-nowrap">
                            <div class="checkbox">
                                <input type="checkbox" class="e-checkall" />
                                <label class="checkbox-label"></label>
                            </div>
                        </th>
                        <th class="text-center text-nowrap">
                            <div>&nbsp;</div>
                        </th>
                    }
                    <th class="text-center text-nowrap"><div>请填写@(tableData.TableDesc)信息</div></th>
                </tr>
            </thead>
            @if (!customData.IsFix)
            {
                <tbody class="template" title="数据行模板">
                    @{
                        IFieldValueProvider emptyProvider = model.CreateEmptyProvider();
                        var rowTemplate = RenderRow(tableData.TableName, emptyProvider);
                    }
                    @if (rowTemplate != null && !string.IsNullOrEmpty(rowTemplate.Value))
                    {
                        @Raw(rowTemplate.Value)
                    }
                    else
                    {
                        <tr>
                            <td class="vam" style="vertical-align: middle">
                                <div class="checkbox">
                                    <input type="checkbox" class="row-index e-checkdatarow" />
                                    <label class="checkbox-label"></label>
                                </div>
                            </td>
                            <td class="vam" style="vertical-align: middle">
                                <span class="row-index">1</span>
                                @foreach (var field in hiddenFields)
                                {
                                    @Raw(RenderHidden(emptyProvider, field, false))
                                }
                                @if (tableData.HasEditKey)
                                {
                                    @Raw(HtmlCommonUtil.HiddenKey(tableData, emptyProvider, false))
                                }
                            </td>
                            <td>
                                <div class="@HtmlCommonUtil.MergeClass("tk-datatable", "column" + tableData.ColumnCount.ToString())">
                                    @if (groupFields == null)
                                    {
                                        @foreach (Tk5FieldInfoEx field in normalFields)
                                        {
                                            HtmlString fieldString = RenderFieldItem(emptyProvider, tableData.TableName, field);
                                            if (fieldString != null && !string.IsNullOrEmpty(fieldString.Value))
                                            {
                                                Raw(fieldString.Value);
                                            }
                                            else
                                            {
                                                <div class="@HtmlCommonUtil.MergeClass("tk-column form-group", field.LayoutClass())">
                                                    <dl @dataClass>
                                                        @if (showCaption)
                                                        {
                                                            <dt>@field.DisplayName</dt>
                                                        }
                                                        <dd>
                                                            <span class="tk-control">@Raw(field.ControlHtml(emptyProvider, false))</span>
                                                        </dd>
                                                    </dl>
                                                </div>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        @foreach (var group in groupFields)
                                        {
                                            string collapse = group.Key.IsCollaspe ? string.Empty : "in";
                                            string rotate = group.Key.IsCollaspe ? "rotate-180" : string.Empty;
                                            <div class="panel panel-default">
                                                <div class="panel-heading panel-collapse-trigger" role="tab" id="headingTwo">
                                                    <h4 class="panel-title">@group.Key.Caption</h4>
                                                    <i class="trigger-icon fa icon-chevron-down @rotate"></i>
                                                </div>
                                                <div class="panel-collapse collapse @collapse">
                                                    <div class="panel-body">
                                                        @foreach (Tk5FieldInfoEx field in group)
                                                        {
                                                            HtmlString fieldString = RenderFieldItem(emptyProvider, tableData.TableName, field);
                                                            if (fieldString != null && !string.IsNullOrEmpty(fieldString.Value))
                                                            {
                                                                Raw(fieldString.Value);
                                                            }
                                                            else
                                                            {
                                                                <div class="@HtmlCommonUtil.MergeClass("tk-column form-group", field.LayoutClass())">
                                                                    <dl @dataClass>
                                                                        @if (showCaption)
                                                                        {
                                                                            <dt>@field.DisplayName</dt>
                                                                        }
                                                                        <dd>
                                                                            <span class="tk-control">@Raw(field.ControlHtml(emptyProvider, false))</span>
                                                                        </dd>
                                                                    </dl>
                                                                </div>
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            }
            <tbody class="list">
                @{
                    var rows = model.CreateDataRowsProvider(tableData);
                    int index = 0;
                }
                @foreach (var provider in rows)
                {
                    var rowString = RenderRow(tableData.TableName, provider);
                    if (rowString != null && !string.IsNullOrEmpty(rowString.Value))
                    {
                        @Raw(rowString.Value)
                    }
                    else
                    {
                        <tr class="table-row">
                            @if (!tableData.IsFix)
                            {
                                <td class="vam" style="vertical-align: middle">
                                    <div class="checkbox">
                                        <input type="checkbox" class="row-index e-checkdatarow" value="@(++index)" />
                                        <label class="checkbox-label"></label>
                                    </div>
                                </td>
                                <td class="vam" style="vertical-align: middle">
                                    <span class="row-index">@index</span>
                                </td>
                            }
                            <td class="hide">
                                @foreach (var field in hiddenFields)
                                {
                                    @Raw(RenderHidden(provider, field, false))
                                }
                                @if (tableData.HasEditKey)
                                {
                                    @Raw(HtmlCommonUtil.HiddenKey(tableData, provider, false))
                                }
                            </td>
                            <td>
                                <div class="@HtmlCommonUtil.MergeClass("tk-datatable", "column" + customData.ColumnCount.ToString())">
                                    @if (groupFields == null)
                                    {
                                        @foreach (Tk5FieldInfoEx field in normalFields)
                                        {
                                            HtmlString fieldString = RenderFieldItem(provider, tableData.TableName, field);
                                            if (fieldString != null && !string.IsNullOrEmpty(fieldString.Value))
                                            {
                                                Raw(fieldString.Value);
                                            }
                                            else
                                            {
                                                <div class="@HtmlCommonUtil.MergeClass("tk-column form-group", field.LayoutClass())">
                                                    <dl @dataClass>
                                                        @if (showCaption)
                                                        {
                                                            <dt>@field.DisplayName</dt>
                                                        }
                                                        <dd>
                                                            <span class="tk-control">@Raw(field.ControlHtml(provider, false))</span>
                                                        </dd>
                                                    </dl>
                                                </div>
                                            }
                                        }
                                    }
                                    else
                                    {
                                        @foreach (var group in groupFields)
                                        {
                                            string collapse = group.Key.IsCollaspe ? string.Empty : "in";
                                            string rotate = group.Key.IsCollaspe ? "rotate-180" : string.Empty;
                                            <div class="panel panel-default">
                                                <div class="panel-heading panel-collapse-trigger" role="tab" id="headingTwo">
                                                    <h4 class="panel-title">@group.Key.Caption</h4>
                                                    <i class="trigger-icon fa icon-chevron-down @rotate"></i>
                                                </div>
                                                <div class="panel-collapse collapse @collapse">
                                                    <div class="panel-body">
                                                        @foreach (Tk5FieldInfoEx field in group)
                                                        {
                                                            HtmlString fieldString = RenderFieldItem(provider, tableData.TableName, field);
                                                            if (fieldString != null && !string.IsNullOrEmpty(fieldString.Value))
                                                            {
                                                                Raw(fieldString.Value);
                                                            }
                                                            else
                                                            {
                                                                <div class="@HtmlCommonUtil.MergeClass("tk-column form-group", field.LayoutClass())">
                                                                    <dl @dataClass>
                                                                        @if (showCaption)
                                                                        {
                                                                            <dt>@field.DisplayName</dt>
                                                                        }
                                                                        <dd>
                                                                            <span class="tk-control">@Raw(field.ControlHtml(provider, false))</span>
                                                                        </dd>
                                                                    </dl>
                                                                </div>
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        }

                                    }
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
    @ShowListFoot(customData)
</div>