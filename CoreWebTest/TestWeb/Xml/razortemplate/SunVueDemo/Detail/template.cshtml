@inherits YJC.Toolkit.Razor.ToolkitTemplatePage<TModel>
@using System.Data;
@using System.Collections.Generic;
@using Microsoft.AspNetCore.Html;
@using YJC.Toolkit.Data;
@using YJC.Toolkit.MetaData;
@using YJC.Toolkit.Razor;
@using YJC.Toolkit.Sys;
@using YJC.Toolkit.Web;
@{
    INormalMetaData metaData = ViewBag.MetaData;
    INormalTableData table = metaData.TableData;
    IEnumerable<Tk5FieldInfoEx> fields = table.DataList;
    DetailVueOperator model = Model as DetailVueOperator;
    List<List<Tk5FieldInfoEx>> showFields = OperatorUtil.Arrange(table);
    int colBase = 24 / table.ColumnCount;
    string tableName = metaData.TableData.TableName;
}
<template>
    <div ref="current"
         url="/c/xml/detail/@(model.Source)">
        @*?@OperatorUtil.AppendKey(metaData, '*')*@
        <el-form :model="@tableName"
                 label-width="80px">
            @foreach (var line in showFields)
            {
                <el-row>
                    @foreach (var field in line)
                    {
                        string nickName = field.NickName;
                        int span = field.Layout.Layout == FieldLayout.PerLine ? 24 : field.Layout.UnitNum * colBase;
                        if (span > 24)
                        {
                            span = 24;
                        }
                        <el-col :span="@span">
                            @Raw(field.VueDetailControlHtml(table.TableName, null, true))
                        </el-col>
                    }
                </el-row>
            }
        </el-form>
        @RenderSectionIfDefined("ModuleButtons")
    </div>
</template>
<script>
    import detailMixin from 'common/mixins/detail'
    export default {
        mixins: [detailMixin]
    }
</script>