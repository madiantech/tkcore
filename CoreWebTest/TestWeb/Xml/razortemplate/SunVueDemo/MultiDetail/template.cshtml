@inherits YJC.Toolkit.Razor.ToolkitTemplatePage<TModel>
@using System.Data;
@using System.Collections.Generic;
@using Microsoft.AspNetCore.Html;
@using YJC.Toolkit.Data;
@using YJC.Toolkit.MetaData;
@using YJC.Toolkit.Razor;
@using YJC.Toolkit.Sys;
@using YJC.Toolkit.Web;
@{
    INormalMetaData metaData = ViewBag.MetaData;
    var normalMeta = from item in metaData.TableDatas
                     where item.ListStyle == TableShowStyle.None
                     select item;
    var listMeta = (from item in metaData.TableDatas
                    where item.ListStyle != TableShowStyle.None
                    select item).ToArray();
    DetailVueOperator model = Model as DetailVueOperator;
}
<template>
    <div ref="current"
         url="/c/xml/detail/@(model.Source)?@OperatorUtil.AppendKey(metaData, '*')">
        @foreach (var table in normalMeta)
        {
            IEnumerable<Tk5FieldInfoEx> fields = table.DataList;
            List<List<Tk5FieldInfoEx>> showFields = OperatorUtil.Arrange(table);
            int colBase = 24 / table.ColumnCount;
            string tableName = metaData.TableData.TableName;
            <el-card header="@Raw(table.TableDesc)">
                <el-form :model="@tableName"
                         label-width="80px">
                    @foreach (var line in showFields)
                    {
                        <el-row>
                            @foreach (var field in line)
                            {
                                string nickName = field.NickName;
                                int span = field.Layout.Layout == FieldLayout.PerLine ? 24 : field.Layout.UnitNum * colBase;
                                if (span > 24)
                                {
                                    span = 24;
                                }
                                <el-col :span="@span">
                                    @Raw(field.VueDetailControlHtml(table.TableName, null, true))
                                </el-col>
                            }
                        </el-row>
                    }
                </el-form>
            </el-card>
            <el-divider></el-divider>
        }
        @if (listMeta.Length > 0)
        {
            <el-tabs ref='tabs'
                     type="border-card"
                     v-model="activeName"
                     @@tab-click="handleClick">
                @foreach (var table in listMeta)
                {
                    IEnumerable<Tk5FieldInfoEx> fields = table.DataList;
                    <el-tab-pane label="@Raw(table.TableDesc)"
                                 name="@table.TableName">
                        <el-table :data="@table.TableName">
                            @foreach (var field in fields)
                            {
                                <el-table-column label="@Raw(field.DisplayName)"
                                                 prop="@field.NickName">
                                    <div slot-scope="{row}"
                                         v-html="row.@field.NickName">
                                    </div>
                                </el-table-column>
                            }
                        </el-table>
                    </el-tab-pane>
                }
            </el-tabs>
        }
    </div>
</template>
<script>
    import detailMixin from 'common/mixins/detail'
    export default {
        mixins: [detailMixin]
    }
</script>