<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BaseMobileCMsg" xml:space="preserve">
    <value>{0}不是{1}的号码，请正确填写！</value>
  </data>
  <data name="ChinaMobile" xml:space="preserve">
    <value>中国移动</value>
  </data>
  <data name="ChinaTelcom" xml:space="preserve">
    <value>中国电信</value>
  </data>
  <data name="ChinaUnicom" xml:space="preserve">
    <value>中国联通</value>
  </data>
  <data name="ConstraintError" xml:space="preserve">
    <value>校验错误</value>
  </data>
  <data name="CurrentDateCMsg" xml:space="preserve">
    <value>不能大于当前日期！</value>
    <comment>DisplayName +</comment>
  </data>
  <data name="DateAfterCMsg" xml:space="preserve">
    <value>{0}必须在{1}之后！</value>
  </data>
  <data name="DateCMsg" xml:space="preserve">
    <value>必须是日期类型</value>
    <comment>displayName +</comment>
  </data>
  <data name="DeleteStyle" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="DetailStyle" xml:space="preserve">
    <value>详细</value>
  </data>
  <data name="DisableStyleErrorTitle" xml:space="preserve">
    <value>功能被禁止</value>
  </data>
  <data name="DisableStyleFunction" xml:space="preserve">
    <value>该模块的{0}功能被禁止了。</value>
  </data>
  <data name="DisableStylePageTitle" xml:space="preserve">
    <value>非法操作</value>
  </data>
  <data name="DoubleCMsg" xml:space="preserve">
    <value>必须是Double类型</value>
    <comment>displayName +</comment>
  </data>
  <data name="EasySearchNotExist" xml:space="preserve">
    <value>不存在</value>
    <comment>DisplayName +</comment>
  </data>
  <data name="EasySearchVariousTwo" xml:space="preserve">
    <value>有二义性，请勿直接输入汉字，选择相应的项目即可</value>
    <comment>DisplayName +</comment>
  </data>
  <data name="EmailCMsg" xml:space="preserve">
    <value>不是EMail地址，请正确填写</value>
    <comment>displayName +</comment>
  </data>
  <data name="FixLengthCMsg" xml:space="preserve">
    <value>{0}的长度必须等于{1}</value>
  </data>
  <data name="InsertStyle" xml:space="preserve">
    <value>新建</value>
  </data>
  <data name="IntCMsg" xml:space="preserve">
    <value>必须是整数类型</value>
    <comment>displayName +</comment>
  </data>
  <data name="ListStyle" xml:space="preserve">
    <value>列表</value>
  </data>
  <data name="MobileCName" xml:space="preserve">
    <value>手机</value>
  </data>
  <data name="MultipleNotEmptyCMsg" xml:space="preserve">
    <value>不能同时为空！</value>
  </data>
  <data name="NoDataRightBody" xml:space="preserve">
    <value>您没有权限访问这条数据</value>
  </data>
  <data name="NoDataRightTitle" xml:space="preserve">
    <value>权限错误！</value>
  </data>
  <data name="NoFunctionRightBody" xml:space="preserve">
    <value>对不起，您的权限不够，无法使用该功能。</value>
  </data>
  <data name="NoFunctionRightTitle" xml:space="preserve">
    <value>权限不够！</value>
  </data>
  <data name="NotEmptyCMsg" xml:space="preserve">
    <value>不能为空！</value>
    <comment>displayName +</comment>
  </data>
  <data name="PostCodeCMsg" xml:space="preserve">
    <value>不是邮政编码，请正确填写！</value>
    <comment>displayName +</comment>
  </data>
  <data name="RangeCBetween" xml:space="preserve">
    <value>{0}的值应该在{1}和{2}之间</value>
  </data>
  <data name="RangeCGreat" xml:space="preserve">
    <value>{0}的值应该大于{1}</value>
  </data>
  <data name="RangeCLow" xml:space="preserve">
    <value>{0}的值应该小于{1}</value>
  </data>
  <data name="SFZCMsg" xml:space="preserve">
    <value>不是身份证号码，请正确填写！</value>
    <comment>displayName +</comment>
  </data>
  <data name="SingleValueCMsg" xml:space="preserve">
    <value>不唯一</value>
    <comment>displayName +</comment>
  </data>
  <data name="StringLengthCMsg" xml:space="preserve">
    <value>{0}的长度不能大于{1}</value>
  </data>
  <data name="Today" xml:space="preserve">
    <value>今天</value>
  </data>
  <data name="Tomorrow" xml:space="preserve">
    <value>明天</value>
  </data>
  <data name="UniqueRowCMsg" xml:space="preserve">
    <value>{0}在第{1}行中的数据与该行数据相同！</value>
  </data>
  <data name="UpdateStyle" xml:space="preserve">
    <value>修改</value>
  </data>
  <data name="Yesterday" xml:space="preserve">
    <value>昨天</value>
  </data>
</root>