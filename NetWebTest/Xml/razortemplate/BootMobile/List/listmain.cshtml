@inherits YJC.Toolkit.Razor.BootcssListTemplate
@using System.Data;
@using YJC.Toolkit.Data;
@using YJC.Toolkit.MetaData;
@using YJC.Toolkit.Razor;
@using YJC.Toolkit.Sys;
@using YJC.Toolkit.Web;
@{
    DataSet dataSet = (DataSet)Model;
    string tableName = ViewBag.MetaData.Table.TableName;
    ITableSchemeEx scheme = ViewBag.MetaData.GetTableScheme(tableName);
    DataTable dataTable = dataSet.Tables[tableName];
    BootcssListData pageData = ViewBag.PageData;
    IList<BootcssListFieldConfig> listFields = pageData.ListFields;
    IFieldValueProvider provider = null;
}
@foreach (DataRow row in dataTable.Rows)
{
    @{
        string rowString = @RenderRow(row);
     }
     if (rowString != null)
     {
    @rowString
     }
     else 
     {
         @{
         provider = CreateProvider(row, dataSet);
         }
    <li class="@HtmlUtil.MergeClass("list-group-item", pageData.ShowBorder ? "" : "nolrborder")">
        <div class="row">
            @foreach (BootcssListFieldConfig field in listFields)
            {
                @{ 
                    Tk5FieldInfoEx fieldInfo = scheme[field.NickName].Convert<Tk5FieldInfoEx>(); 
                    string fieldString = @RenderFieldItem(row, fieldInfo);
                }
                if (fieldString == null)
                {
                <div class="@HtmlUtil.MergeClass(BootcssUtil.GetColClass(field.Col), "lv-vam", field.Class)">@fieldInfo.DisplayValue(provider)</div>
                }
                else
                {
                @fieldString
                }
            }
        </div>
    </li>
    }
}