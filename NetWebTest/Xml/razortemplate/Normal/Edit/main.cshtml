@inherits YJC.Toolkit.Razor.BaseToolkit2Template
@using System.Data;
@using System.Collections.Generic;
@using YJC.Toolkit.MetaData;
@using YJC.Toolkit.Data;
@using YJC.Toolkit.Razor;
@using YJC.Toolkit.Sys;
@using YJC.Toolkit.Web;
@{
    IEditModel model = CreateModel<IEditModel>(Model);
    NormalEditData pageData = ViewBag.PageData;
    HtmlAttribute attribute = pageData.DialogMode ? new HtmlAttribute("data-dialog-action", "close")
        : new HtmlAttribute("data-url", model.RetUrl);
    HtmlAttribute retAttr = new HtmlAttribute("data-action", "return");
}
@section DefaultButtons
{
    <div class="text-center clearfix">
        @BootcssCommonUtil.Button(pageData.SaveButtonCaption, "btn-submit auto-disabled", BootcssButton.Primary, false)
        @BootcssCommonUtil.Button(pageData.CancelCaption, "m10", BootcssButton.Default, false, attribute, retAttr)
    </div>
}
@functions
{
    string GetJson(INormalTableData table)
    {
        var json = string.Format("{{\"Tables\":[{0}]}}", table.JsonFields);
        return StringUtil.EscapeHtmlAttribute(json);
    }
}
@{
    INormalMetaData metaData = ViewBag.MetaData;
    INormalTableData table = metaData.TableData;
    IEnumerable<Tk5FieldInfoEx> hiddenFields = table.HiddenList;
    IEnumerable<Tk5FieldInfoEx> normalFields = table.DataList;
    bool showCaption = pageData.ShowCaption;
    bool hasEditKey = table.HasEditKey;
    string dataClass = showCaption ? string.Empty : "class=\"nocaption\"";
    IFieldValueProvider provider = model.CreateMainObjectProvider(metaData.TableData);
}
<form action="@ViewBag.PageData.FormAction" method="POST" id="PostForm" class="tk-dataform p5 mb15" role="form" data-check="true" data-post="@GetJson(table)">
    <div id="@table.TableName" class="@(HtmlCommonUtil.MergeClass("tk-datatable table-row", "column" + table.ColumnCount.ToString()))">
        <div class="hide">
            @foreach (Tk5FieldInfoEx field in hiddenFields)
            {
                @RenderHidden(provider, field, true)
            }
            @if (hasEditKey)
            {
                @HtmlCommonUtil.HiddenKey(table, provider, true)
            }
        </div>
        <div class="p10 pull-left w100p">
            @foreach (Tk5FieldInfoEx field in normalFields)
            {
                @{
                string fieldString = RenderFieldItem(provider, field);
                }
                if (fieldString != null)
                {
                    @fieldString
                }
                else
                {
                    <div class="@HtmlCommonUtil.MergeClass("tk-column form-group", field.LayoutClass())">
                        <dl @dataClass>
                            @if (showCaption)
                            {
                                <dt>@field.DisplayName</dt>
                            }
                            <dd>
                                <span class="tk-control">
                                    @field.ControlHtml(provider, true)
                                </span>
                            </dd>
                        </dl>
                    </div>
                }
            }
        </div>
    </div>
</form>
@RenderSectionOrDefault("ModuleButtons", "DefaultButtons")